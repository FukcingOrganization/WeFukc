using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace Contracts.Contracts.StickDAO.ContractDefinition
{


    public partial class StickDAODeployment : StickDAODeploymentBase
    {
        public StickDAODeployment() : base(BYTECODE) { }
        public StickDAODeployment(string byteCode) : base(byteCode) { }
    }

    public class StickDAODeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "60806040523480156200001157600080fd5b50604051620054f8380380620054f88339810160408190526200003491620005ab565b60405180604001604052806008815260200167537469636b44414f60c01b815250604051806040016040528060048152602001635344414f60e01b8152508160039081620000839190620006d6565b506004620000928282620006d6565b505050620000b9620000a96200045260201b60201c565b68056bc75e2d6310000062000456565b6200042060206040518060800160405280603c815260200160018152602001600181526020016001815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030155505060206040518060800160405280610e108152602001605a81526020016107d08152602001606481525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015550506020604051806080016040528062015180815260200160508152602001610bb8815260200160968152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301555050602060405180608001604052806203f4808152602001604681526020016103e881526020016032815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030155505060206040518060800160405280603c8152602001604b815260200160018152602001600181525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015550506020604051806080016040528060148152602001604b81526020016001815260200160018152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301555050602060405180608001604052806203f4808152602001604681526020016103e8815260200160328152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301555050565b68056bc75e2d631000006021556200043b600d828162000521565b506200044b601a80546001019055565b50620007ca565b3390565b6001600160a01b038216620004b15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620004c59190620007a2565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b82600d81019282156200056c579160200282015b828111156200056c57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000535565b506200057a9291506200057e565b5090565b5b808211156200057a57600081556001016200057f565b634e487b7160e01b600052604160045260246000fd5b60006101a0808385031215620005c057600080fd5b83601f840112620005d057600080fd5b6040518181016001600160401b0381118282101715620005f457620005f462000595565b6040529083019080858311156200060a57600080fd5b845b838110156200063d5780516001600160a01b03811681146200062e5760008081fd5b8252602091820191016200060c565b509095945050505050565b600181811c908216806200065d57607f821691505b6020821081036200067e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200051c57600081815260208120601f850160051c81016020861015620006ad5750805b601f850160051c820191505b81811015620006ce57828155600101620006b9565b505050505050565b81516001600160401b03811115620006f257620006f262000595565b6200070a8162000703845462000648565b8462000684565b602080601f831160018114620007425760008415620007295750858301515b600019600386901b1c1916600185901b178555620006ce565b600085815260208120601f198616915b82811015620007735788860151825594840194600190910190840162000752565b5085821015620007925787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620007c457634e487b7160e01b600052601160045260246000fd5b92915050565b614d1e80620007da6000396000f3fe6080604052600436106102975760003560e01c80637506a78f11610166578063c2813bc0116100d3578063e69a05041161008f578063efd2aeeb1161006c578063efd2aeeb14610961578063f0dda65c14610981578063f9b29c12146109a1578063ff2c50a0146109c157005b8063e69a0504146108e3578063ecae2b3514610903578063ed6a48f31461093457005b8063c2813bc014610819578063c9d27afe14610848578063d1088a7614610868578063d85f181f14610888578063dd62ed3e146108a8578063dd83e217146108c357005b8063a457c2d711610122578063a457c2d714610300578063a6fb56ac146106bf578063a9059cbb14610300578063ae30a302146106ff578063b452df9514610782578063bf3c6bbe146107f957005b80637506a78f146105c2578063763b6d4c1461062a5780638a037bb21461064a57806393d32b401461066a57806395d89b411461068a578063a3419d041461069f57005b8063313ce5671161020457806350296e02116101c057806350296e02146104ec5780635b00d95d1461050c57806361e236411461051f5780636a6d75ca1461054c5780636cd4f6da1461056c57806370a082311461058c57005b8063313ce5671461044357806331d9984e1461045f5780633950935114610300578063466cfc6614610474578063474da79a146104945780634bf8a5d0146104cc57005b806319f8edf21161025357806319f8edf2146103935780631dd28c55146103b357806323b872dd146103d3578063245da66b146103ee57806329769dfa146104035780632c5950f91461042357005b8063013cf08b146102a057806306fdde03146102de578063095ea7b3146103005780631022b30b1461033057806314205e281461035e57806318160ddd1461037e57005b3661029e57005b005b3480156102ac57600080fd5b506102c06102bb36600461394b565b6109d7565b6040516102d5999897969594939291906139ec565b60405180910390f35b3480156102ea57600080fd5b506102f3610aac565b6040516102d59190613a49565b34801561030c57600080fd5b5061032061031b366004613a78565b610b3e565b60405190151581526020016102d5565b34801561033c57600080fd5b5061035061034b36600461394b565b610b98565b6040519081526020016102d5565b34801561036a57600080fd5b50610350610379366004613aa2565b610c07565b34801561038a57600080fd5b50600254610350565b34801561039f57600080fd5b5061029e6103ae366004613abd565b610c78565b3480156103bf57600080fd5b506103506103ce366004613b35565b610d44565b3480156103df57600080fd5b5061032061031b366004613bce565b3480156103fa57600080fd5b5061029e610ed8565b34801561040f57600080fd5b5061029e61041e366004613c89565b611064565b34801561042f57600080fd5b5061029e61043e366004613cf5565b6111f8565b34801561044f57600080fd5b50604051601281526020016102d5565b34801561046b57600080fd5b50602154610350565b34801561048057600080fd5b5061029e61048f36600461394b565b611424565b3480156104a057600080fd5b506104b46104af36600461394b565b611524565b6040516001600160a01b0390911681526020016102d5565b3480156104d857600080fd5b5061029e6104e736600461394b565b611544565b3480156104f857600080fd5b5061035061050736600461394b565b6115df565b34801561051857600080fd5b5047610350565b34801561052b57600080fd5b5061053f61053a36600461394b565b6115f6565b6040516102d59190613d70565b34801561055857600080fd5b5061029e610567366004613a78565b61165b565b34801561057857600080fd5b5061032061058736600461394b565b611692565b34801561059857600080fd5b506103506105a7366004613aa2565b6001600160a01b031660009081526020819052604090205490565b3480156105ce57600080fd5b506106196105dd36600461394b565b601e602052600090815260409020805460018201546002830154600384015460079094015460ff90931693919290916001600160a01b03169085565b6040516102d5959493929190613db4565b34801561063657600080fd5b5061029e61064536600461394b565b611704565b34801561065657600080fd5b5061029e610665366004613dee565b6117ed565b34801561067657600080fd5b5061029e610685366004613dee565b611967565b34801561069657600080fd5b506102f3611b40565b3480156106ab57600080fd5b5061029e6106ba366004613e6c565b611b4f565b3480156106cb57600080fd5b506106df6106da36600461394b565b611c7f565b6040805194855260208501939093529183015260608201526080016102d5565b34801561070b57600080fd5b5061076e61071a36600461394b565b601d602052600090815260409020805460018201546002830154600384015460048501546005860154600687015460079097015460ff96871697959694851695939492936001600160a01b03909216921688565b6040516102d5989796959493929190613e8e565b34801561078e57600080fd5b506107e561079d36600461394b565b601f6020526000908152604090208054600182015460028301546003840154600485015460059095015460ff8086169661010087048216966201000090049091169493929188565b6040516102d5989796959493929190613edd565b34801561080557600080fd5b5061029e610814366004613f21565b611cb9565b34801561082557600080fd5b5061083961083436600461394b565b611e37565b6040516102d593929190613f88565b34801561085457600080fd5b5061029e610863366004613fdc565b611fe7565b34801561087457600080fd5b5061029e61088336600461394b565b612230565b34801561089457600080fd5b5061029e6108a336600461394b565b6123f8565b3480156108b457600080fd5b5061035061031b36600461400c565b3480156108cf57600080fd5b5061029e6108de366004614036565b61252f565b3480156108ef57600080fd5b5061029e6108fe3660046140b0565b61253b565b34801561090f57600080fd5b5061092361091e36600461394b565b612709565b6040516102d59594939291906140eb565b34801561094057600080fd5b5061095461094f36600461394b565b612a9a565b6040516102d5919061419a565b34801561096d57600080fd5b506102f361097c3660046141ad565b612afd565b34801561098d57600080fd5b5061029e61099c366004613a78565b612d76565b3480156109ad57600080fd5b5061029e6109bc36600461394b565b612e3d565b3480156109cd57600080fd5b5061035060215481565b601c60205260009081526040902080546001820180549192916109f9906141ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610a25906141ea565b8015610a725780601f10610a4757610100808354040283529160200191610a72565b820191906000526020600020905b815481529060010190602001808311610a5557829003601f168201915b505050506002830154600384015460048501546005860154600687015460078801546008909801549697949693955060ff90921693909289565b606060038054610abb906141ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae7906141ea565b8015610b345780601f10610b0957610100808354040283529160200191610b34565b820191906000526020600020905b815481529060010190602001808311610b1757829003601f168201915b5050505050905090565b60405162461bcd60e51b815260206004820152602160248201527f546869732069732061206e6f6e2d7472616e7366657261626c6520746f6b656e6044820152602160f81b60648201526000906084015b60405180910390fd5b6000818152601c60205260408120610baf81612f64565b6001600482015460ff166003811115610bca57610bca6139b4565b11610be75760405162461bcd60e51b8152600401610b8f90614224565b600481015460ff166003811115610c0057610c006139b4565b9392505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c729190614278565b92915050565b6012546001600160a01b0316336001600160a01b031614610cab5760405162461bcd60e51b8152600401610b8f906142a7565b6000610cb685613182565b610cbf85613182565b610cc885613182565b610cd185613182565b604051602001610ce49493929190614309565b60408051601f1981840301815291905290506000610d0882600560075b0154610d44565b6000908152601f60205260409020805462ff00001916620100001781556002810196909655505060038401929092556004830155600590910155565b60008060005b600d811015610d9257600d81600d8110610d6657610d66614291565b01546001600160a01b03163303610d805760019150610d92565b80610d8a81614470565b915050610d4a565b508080610da95750602154610da6336105a7565b10155b610e1b5760405162461bcd60e51b815260206004820152603a60248201527f596f7520646f6e2774206861766520656e6f75676820766f74696e6720706f7760448201527f657220746f2070726f706f73652c20736f7272792064756465210000000000006064820152608401610b8f565b6020548310610e6c5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c69642070726f706f73616c207479706520796f7520666f6f6c21006044820152606401610b8f565b6000601c6000610e7b601a5490565b81526020019081526020016000209050610e94601a5490565b8155610ea4601a80546001019055565b60018101610eb286826144d7565b504260028201556003810193909355505060048101805460ff1916600117905554919050565b6000601e6000610ee7601b5490565b8152602081019190915260400160002090506001815460ff166003811115610f1157610f116139b4565b14610f845760405162461bcd60e51b815260206004820152603e60248201527f447564652c207468657265206973206e6f206d6f6e65746172792070726f706f60448201527f73616c20746f2066696e616c697a65212041726520796f75206f6b61793f00006064820152608401610b8f565b60018101546000908152601c60205260409020610fa081612f64565b600481015460019060ff166003811115610fbc57610fbc6139b4565b116110265760405162461bcd60e51b815260206004820152603460248201527f5468652070726f706f73616c206973207374696c6c20676f696e67206f6e2062604482015273726f2120436f6d65206261636b206c617465722160601b6064820152608401610b8f565b6004810154825460ff90911690839060ff1916600183600381111561104d5761104d6139b4565b0217905550611060601b80546001019055565b5050565b6012546001600160a01b0316336001600160a01b0316146110975760405162461bcd60e51b8152600401610b8f906142a7565b804710156110b75760405162461bcd60e51b8152600401610b8f90614596565b6000601e60006110c6601b5490565b8152602081019190915260400160009081209150815460ff1660038111156110f0576110f06139b4565b146111715760405162461bcd60e51b8152602060048201526044602482018190527f5468652063757272656e74206d6f6e65746172792070726f706f73616c206973908201527f206e6f742066696e616c697a65642062726f2120436f6d65206261636b206c616064820152633a32b91760e11b608482015260a401610b8f565b805460ff1916600117815560028101829055835161119890600483019060208701906138a3565b5082516111ae90600583019060208601906138a3565b5060006111ba83613182565b6040516020016111ca91906145e9565b60408051601f1981840301815291905290506111e98160056001610d01565b82600101819055505050505050565b6012546001600160a01b0316336001600160a01b03161461122b5760405162461bcd60e51b8152600401610b8f906142a7565b6000601e600061123a601b5490565b8152602081019190915260400160009081209150815460ff166003811115611264576112646139b4565b146112e55760405162461bcd60e51b8152602060048201526044602482018190527f5468652063757272656e74206d6f6e65746172792070726f706f73616c206973908201527f206e6f742066696e616c697a65642062726f2120436f6d65206261636b206c616064820152637465722160e01b608482015260a401610b8f565b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa15801561132c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113509190614278565b9050828110156113725760405162461bcd60e51b8152600401610b8f90614596565b815460ff19166001178255600282018390556003820180546001600160a01b0388166001600160a01b031990911617905584516113b890600484019060208801906138a3565b5083516113ce90600584019060208701906138a3565b5060006113da84613182565b6113e388613214565b6040516020016113f492919061462d565b60408051601f1981840301815291905290506114138160056000610d01565b836001018190555050505050505050565b6000818152601d602052604090206001810154600214801561144b5750600281015460ff16155b6114675760405162461bcd60e51b8152600401610b8f906146ad565b61147082610b98565b6003811115611481576114816139b4565b8154829060ff1916600183600381111561149d5761149d6139b4565b02179055506001815460ff1660038111156114ba576114ba6139b4565b116114d75760405162461bcd60e51b8152600401610b8f906146d8565b6002815460ff1660038111156114ef576114ef6139b4565b03611513578060040154600582600301546008811061151057611510614291565b01555b600201805460ff1916600117905550565b600d81600d811061153457600080fd5b01546001600160a01b0316905081565b6012546001600160a01b0316336001600160a01b0316146115775760405162461bcd60e51b8152600401610b8f906142a7565b60006115828261322a565b61158d60215461322a565b60405160200161159e929190614728565b60408051601f19818403018152919052905060006115bf8260056004610d01565b6000908152601d6020526040902060036001820155600401929092555050565b600581600881106115ef57600080fd5b0154905081565b6000818152601e602090815260409182902060040180548351818402810184019094528084526060939283018282801561164f57602002820191906000526020600020905b81548152602001906001019080831161163b575b50505050509050919050565b81600d82600d811061166f5761166f614291565b0180546001600160a01b0319166001600160a01b03929092169190911790555050565b6000818152601c602052604081206116a981612f64565b6001600482015460ff1660038111156116c4576116c46139b4565b116116e15760405162461bcd60e51b8152600401610b8f90614224565b6002600482015460ff1660038111156116fc576116fc6139b4565b149392505050565b6000818152601d602052604090206001810154600314801561172b5750600281015460ff16155b6117475760405162461bcd60e51b8152600401610b8f906146ad565b61175082610b98565b6003811115611761576117616139b4565b8154829060ff1916600183600381111561177d5761177d6139b4565b02179055506001815460ff16600381111561179a5761179a6139b4565b116117b75760405162461bcd60e51b8152600401610b8f906146d8565b6002815460ff1660038111156117cf576117cf6139b4565b03611513576004810154602155600201805460ff1916600117905550565b6000838152601e602052604090206002815460ff166003811115611813576118136139b4565b146118305760405162461bcd60e51b8152600401610b8f906147c6565b600061183d828585613241565b90506000811161185f5760405162461bcd60e51b8152600401610b8f90614840565b600282015460078301546118739083614889565b11156118c15760405162461bcd60e51b815260206004820152601e60248201527f54686520617070726f76656420616d6f756e7420657863656564696e672100006044820152606401610b8f565b60038201546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611922573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611946919061489c565b508082600701600082825461195b9190614889565b90915550505050505050565b6000838152601e602052604090206002815460ff16600381111561198d5761198d6139b4565b146119aa5760405162461bcd60e51b8152600401610b8f906147c6565b60006119b7828585613241565b9050600081116119d95760405162461bcd60e51b8152600401610b8f90614840565b600282015460078301546119ed9083614889565b1115611a3b5760405162461bcd60e51b815260206004820152601e60248201527f54686520617070726f76656420616d6f756e7420657863656564696e672100006044820152606401610b8f565b604051600090339083908381818185875af1925050503d8060008114611a7d576040519150601f19603f3d011682016040523d82523d6000602084013e611a82565b606091505b5050905080611b1f5760405162461bcd60e51b815260206004820152606060248201527f5472616e73616374696f6e206f662073656e64696e6720636f696e732066616960448201527f6c656421204920646f6e6e6f2077687921204d617962652070726f626c656d2060648201527f6f6e20746865206e6574776f726b3f20547279206974206c61746572206f6e21608482015260a401610b8f565b81836007016000828254611b339190614889565b9091555050505050505050565b606060048054610abb906141ea565b6012546001600160a01b0316336001600160a01b031614611b825760405162461bcd60e51b8152600401610b8f906142a7565b60058260088110611b9557611b95614291565b01548103611bf45760405162461bcd60e51b815260206004820152602660248201527f446573697265642066756e6374696f6e20696e64657820697320616c7265616460448201526579207365742160d01b6064820152608401610b8f565b6000611bff8361322a565b611c088361322a565b611c2560058660088110611c1e57611c1e614291565b015461322a565b604051602001611c37939291906148b9565b60408051601f1981840301815291905290506000611c588260056003610d01565b6000908152601d602052604090206002600182015560038101949094555050600490910155565b60208181548110611c8f57600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b6012546001600160a01b0316336001600160a01b031614611cec5760405162461bcd60e51b8152600401610b8f906142a7565b6001600160a01b038116151580611d235750600d82600d8110611d1157611d11614291565b01546001600160a01b03828116911614155b611d885760405162461bcd60e51b815260206004820152603060248201527f4e657720616464726573732063616e206e6f7420626520746865206e756c6c2060448201526f6f722073616d6520616464726573732160801b6064820152608401610b8f565b6000611d938361322a565b611d9c83613214565b611dc2600d86600d8110611db257611db2614291565b01546001600160a01b0316613214565b604051602001611dd49392919061497d565b60408051601f1981840301815291905290506000611df58260056002610d01565b6000908152601d6020526040902060018082015560038101949094555050600590910180546001600160a01b0319166001600160a01b03909216919091179055565b6060806060600080611e48866133e1565b919750925090506000866001600160401b03811115611e6957611e69613aef565b604051908082528060200260200182016040528015611e92578160200160208202803683370190505b5090506000876001600160401b03811115611eaf57611eaf613aef565b604051908082528060200260200182016040528015611ed8578160200160208202803683370190505b5090506000886001600160401b03811115611ef557611ef5613aef565b604051908082528060200260200182016040528015611f1e578160200160208202803683370190505b509050845b848111611fd7576000818152601c60205260409020600501548451859083908110611f5057611f50614291565b602002602001018181525050601c600082815260200190815260200160002060060154838281518110611f8557611f85614291565b602002602001018181525050601c600082815260200190815260200160002060070154828281518110611fba57611fba614291565b602090810291909101015280611fcf81614470565b915050611f23565b5091989097509095509350505050565b670de0b6b3a7640000611ff9336105a7565b101561205f5760405162461bcd60e51b815260206004820152602f60248201527f596f7520646f6e2774206861766520656e6f75676820766f74696e6720706f7760448201526e65722c20736f72727920647564652160881b6064820152608401610b8f565b6000828152601c6020526040902061207681612f64565b6001600482015460ff166003811115612091576120916139b4565b146121045760405162461bcd60e51b815260206004820152603960248201527f5468652070726f706f73616c2068617320656e646564206d7920667269656e6460448201527f2e204d6179626520616e6f746865722070726f706f73616c3f000000000000006064820152608401610b8f565b33600090815260098201602052604090205460ff161561217f5760405162461bcd60e51b815260206004820152603060248201527f596f75206861766520616c726561647920766f7465642064756465212057687960448201526f20746f6f20616767726573736976653f60801b6064820152608401610b8f565b3360008181526009830160205260408120805460ff1916600117905590670de0b6b3a7640000906121af906105a7565b6121b99190614a41565b905082156121e057808260070160008282546121d59190614889565b909155506121fa9050565b808260080160008282546121f49190614889565b90915550505b60058201805490600061220c83614470565b9190505550808260060160008282546122259190614889565b909155505050505050565b6000818152601f602052604090208054610100900460ff1615801561225c5750805462010000900460ff165b6122785760405162461bcd60e51b8152600401610b8f906146ad565b61228182610b98565b6003811115612292576122926139b4565b8154829060ff191660018360038111156122ae576122ae6139b4565b0217905550805460019060ff1660038111156122cc576122cc6139b4565b116122e95760405162461bcd60e51b8152600401610b8f906146d8565b6002815460ff166003811115612301576123016139b4565b036123e8576040805160808101825260028301548152600383015460208281019182526004808601549484019485526005860154606085019081528254600181018455600093909352935191027fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bb81019190915590517fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bc82015591517fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bd830155517fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866be909101555b805461ff00191661010017905550565b6000818152601f602052604090208054610100900460ff161580156124255750805462010000900460ff16155b6124415760405162461bcd60e51b8152600401610b8f906146ad565b61244a82610b98565b600381111561245b5761245b6139b4565b8154829060ff19166001836003811115612477576124776139b4565b0217905550805460019060ff166003811115612495576124956139b4565b116124b25760405162461bcd60e51b8152600401610b8f906146d8565b6002815460ff1660038111156124ca576124ca6139b4565b036123e857600060208260010154815481106124e8576124e8614291565b60009182526020909120600280850154600493840290920191825560038086015460018401559285015490820155600584015491015550805461ff00191661010017905550565b611060600d82816138ee565b6012546001600160a01b0316336001600160a01b03161461256e5760405162461bcd60e51b8152600401610b8f906142a7565b600061257986613182565b61258286613182565b6125af6020898154811061259857612598614291565b906000526020600020906004020160000154613182565b6125b887613182565b6125e560208b815481106125ce576125ce614291565b906000526020600020906004020160010154613182565b6040516020016125f9959493929190614a63565b6040516020818303038152906040529050600061261584613182565b6126426020898154811061262b5761262b614291565b906000526020600020906004020160020154613182565b61264b85613182565b61267860208b8154811061266157612661614291565b906000526020600020906004020160030154613182565b60405160200161268b9493929190614b97565b6040516020818303038152906040529050600082826040516020016126b1929190614c78565b60408051601f19818403018152919052905060006126d28260056007610d01565b6000908152601f60205260409020600181019990995550505050600285019390935560038401919091556004830155600590910155565b606080606080606060008061271d886133e1565b919950925090506000886001600160401b0381111561273e5761273e613aef565b604051908082528060200260200182016040528015612767578160200160208202803683370190505b5090506000896001600160401b0381111561278457612784613aef565b6040519080825280602002602001820160405280156127b757816020015b60608152602001906001900390816127a25790505b50905060008a6001600160401b038111156127d4576127d4613aef565b6040519080825280602002602001820160405280156127fd578160200160208202803683370190505b50905060008b6001600160401b0381111561281a5761281a613aef565b604051908082528060200260200182016040528015612843578160200160208202803683370190505b50905060008c6001600160401b0381111561286057612860613aef565b604051908082528060200260200182016040528015612889578160200160208202803683370190505b509050865b868111612a85576000818152601c602052604090205486518790839081106128b8576128b8614291565b602002602001018181525050601c600082815260200190815260200160002060010180546128e5906141ea565b80601f0160208091040260200160405190810160405280929190818152602001828054612911906141ea565b801561295e5780601f106129335761010080835404028352916020019161295e565b820191906000526020600020905b81548152906001019060200180831161294157829003601f168201915b505050505085828151811061297557612975614291565b6020026020010181905250601c6000828152602001908152602001600020600201548482815181106129a9576129a9614291565b6020908102919091018101919091526000828152601c82526040902060030154815481106129d9576129d9614291565b9060005260206000209060040201600001548482815181106129fd576129fd614291565b6020026020010151612a0f9190614889565b838281518110612a2157612a21614291565b6020908102919091018101919091526000828152601c909152604090206004015460ff166003811115612a5657612a566139b4565b828281518110612a6857612a68614291565b602090810291909101015280612a7d81614470565b91505061288e565b50939c929b5090995097509095509350505050565b6000818152601e602090815260409182902060050180548351818402810184019094528084526060939283018282801561164f576020028201919060005260206000209081548152602001906001019080831161163b5750505050509050919050565b6014546060906001600160a01b0316336001600160a01b031614612b895760405162461bcd60e51b815260206004820152603a60248201527f4f6e6c7920746865204c6f7264732063616e2063616c6c20746869732066756e60448201527f6374696f6e2120476f20617761792c20796f7520707269636b210000000000006064820152608401610b8f565b6000858152601c60205260409020612ba081612f64565b6001600482015460ff166003811115612bbb57612bbb6139b4565b14612c085760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c2068617320656e646564206d79206c6f726421006044820152606401610b8f565b6000848152600a8201602052604090205460ff1615612c695760405162461bcd60e51b815260206004820181905260248201527f4d79206c6f72642c20796f75206861766520616c726561647920766f746564216044820152606401610b8f565b6000848152600a820160205260408120805460ff19166001179055670de0b6b3a764000084612cb2600d600701546001600160a01b031660009081526020819052604090205490565b612cbc9190614a41565b612cc69190614a41565b90508515612ced5780826007016000828254612ce29190614889565b90915550612d079050565b80826008016000828254612d019190614889565b90915550505b600582018054906000612d1983614470565b919050555080826006016000828254612d329190614889565b909155505060408051808201909152601b81527f566572792077697365206465636973696f6e206d79206c6f72642100000000006020820152979650505050505050565b600e546001600160a01b0316336001600160a01b03161480612dab57506018546001600160a01b0316336001600160a01b0316145b612e1d5760405162461bcd60e51b815260206004820152603f60248201527f4f6e6c792074686520436c616e20616e6420535449434b20746f6b656e20636f60448201527f6e7472616374732063616e2063616c6c20746869732066756e6374696f6e21006064820152608401610b8f565b612e278282613475565b601454611060906001600160a01b031682613475565b6000818152601d60205260409020600180820154148015612e635750600281015460ff16155b612e7f5760405162461bcd60e51b8152600401610b8f906146ad565b612e8882610b98565b6003811115612e9957612e996139b4565b8154829060ff19166001836003811115612eb557612eb56139b4565b02179055506001815460ff166003811115612ed257612ed26139b4565b11612eef5760405162461bcd60e51b8152600401610b8f906146d8565b6002815460ff166003811115612f0757612f076139b4565b0361151357600581015460038201546001600160a01b0390911690600d90818110612f3457612f34614291565b0180546001600160a01b0319166001600160a01b0392909216919091179055600201805460ff1916600117905550565b6000600482015460ff166003811115612f7f57612f7f6139b4565b03612ff25760405162461bcd60e51b815260206004820152603b60248201527f546869732070726f706f73616c20494420686173206e6f74206265656e20617360448201527f7369676e656420746f20616e792070726f706f73616c2062726f2100000000006064820152608401610b8f565b600080826007015411801561300b575060008260080154115b1561304557816008015482600701546130249190614889565b6007830154613034906064614ca7565b61303e9190614a41565b9050613064565b6000826007015411801561305b57506008820154155b15613064575060645b60005b60205481101561317d578083600301540361316b576020818154811061308f5761308f614291565b90600052602060002090600402016000015483600201546130b09190614889565b42111561316b578260050154602082815481106130cf576130cf614291565b9060005260206000209060040201600301541180613114575082600601546020828154811061310057613100614291565b906000526020600020906004020160020154115b806131425750816020828154811061312e5761312e614291565b906000526020600020906004020160010154115b1561315b5760048301805460ff1916600317905561316b565b60048301805460ff191660021790555b8061317581614470565b915050613067565b505050565b6060600061318f83613534565b60010190506000816001600160401b038111156131ae576131ae613aef565b6040519080825280601f01601f1916602001820160405280156131d8576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846131e257509392505050565b6060610c726001600160a01b038316601461360c565b6060610c7282613239846137a7565b60010161360c565b33600090815260068401602052604081205460ff16156132d45760405162461bcd60e51b815260206004820152604260248201527f447564652120596f75206861766520616c726561647920636c61696d6564207960448201527f6f757220616c6c6f77616e6365212057687920746f6f20616767726573736976606482015261653f60f01b608482015260a401610b8f565b6040516bffffffffffffffffffffffff193360601b166020820152600090819060340160405160208183030381529060405280519060200120905060005b60048701548110156133d65761337b8686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050506004890180548490811061336a5761336a614291565b906000526020600020015484613811565b156133c4573360009081526006880160205260409020805460ff19166001179055600587018054829081106133b2576133b2614291565b906000526020600020015492506133d6565b806133ce81614470565b915050613312565b509095945050505050565b600080600080600080866133f4601a5490565b6133fe9190614cbe565b1115613437578561340e601a5490565b6134189190614cbe565b915060016134268784614889565b6134309190614cbe565b905061346a565b600191506001613446601a5490565b6134509190614cbe565b9550600161345d601a5490565b6134679190614cbe565b90505b949590949350915050565b6001600160a01b0382166134cb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b8f565b80600260008282546134dd9190614889565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106135735772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061359f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106135bd57662386f26fc10000830492506010015b6305f5e10083106135d5576305f5e100830492506008015b61271083106135e957612710830492506004015b606483106135fb576064830492506002015b600a8310610c725760010192915050565b6060600061361b836002614ca7565b613626906002614889565b6001600160401b0381111561363d5761363d613aef565b6040519080825280601f01601f191660200182016040528015613667576020820181803683370190505b509050600360fc1b8160008151811061368257613682614291565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106136b1576136b1614291565b60200101906001600160f81b031916908160001a90535060006136d5846002614ca7565b6136e0906001614889565b90505b6001811115613758576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061371457613714614291565b1a60f81b82828151811061372a5761372a614291565b60200101906001600160f81b031916908160001a90535060049490941c9361375181614cd1565b90506136e3565b508315610c005760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610b8f565b600080608083901c156137bf5760809290921c916010015b604083901c156137d45760409290921c916008015b602083901c156137e95760209290921c916004015b601083901c156137fe5760109290921c916002015b600883901c15610c725760010192915050565b60008261381e8584613827565b14949350505050565b600081815b845181101561386c576138588286838151811061384b5761384b614291565b6020026020010151613874565b91508061386481614470565b91505061382c565b509392505050565b6000818310613890576000828152602084905260409020610c00565b6000838152602083905260409020610c00565b8280548282559060005260206000209081019282156138de579160200282015b828111156138de5782518255916020019190600101906138c3565b506138ea929150613936565b5090565b82600d81019282156138de579160200282015b828111156138de57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613901565b5b808211156138ea5760008155600101613937565b60006020828403121561395d57600080fd5b5035919050565b60005b8381101561397f578181015183820152602001613967565b50506000910152565b600081518084526139a0816020860160208601613964565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b600481106139e857634e487b7160e01b600052602160045260246000fd5b9052565b60006101208b8352806020840152613a068184018c613988565b915050886040830152876060830152613a2260808301886139ca565b8560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b602081526000610c006020830184613988565b80356001600160a01b0381168114613a7357600080fd5b919050565b60008060408385031215613a8b57600080fd5b613a9483613a5c565b946020939093013593505050565b600060208284031215613ab457600080fd5b610c0082613a5c565b60008060008060808587031215613ad357600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613b2d57613b2d613aef565b604052919050565b60008060408385031215613b4857600080fd5b82356001600160401b0380821115613b5f57600080fd5b818501915085601f830112613b7357600080fd5b8135602082821115613b8757613b87613aef565b613b99601f8301601f19168201613b05565b92508183528781838601011115613baf57600080fd5b8181850182850137600091830181019190915290969401359450505050565b600080600060608486031215613be357600080fd5b613bec84613a5c565b9250613bfa60208501613a5c565b9150604084013590509250925092565b600082601f830112613c1b57600080fd5b813560206001600160401b03821115613c3657613c36613aef565b8160051b613c45828201613b05565b9283528481018201928281019087851115613c5f57600080fd5b83870192505b84831015613c7e57823582529183019190830190613c65565b979650505050505050565b600080600060608486031215613c9e57600080fd5b83356001600160401b0380821115613cb557600080fd5b613cc187838801613c0a565b94506020860135915080821115613cd757600080fd5b50613ce486828701613c0a565b925050604084013590509250925092565b60008060008060808587031215613d0b57600080fd5b613d1485613a5c565b935060208501356001600160401b0380821115613d3057600080fd5b613d3c88838901613c0a565b94506040870135915080821115613d5257600080fd5b50613d5f87828801613c0a565b949793965093946060013593505050565b6020808252825182820181905260009190848201906040850190845b81811015613da857835183529284019291840191600101613d8c565b50909695505050505050565b60a08101613dc282886139ca565b602082019590955260408101939093526001600160a01b03919091166060830152608090910152919050565b600080600060408486031215613e0357600080fd5b8335925060208401356001600160401b0380821115613e2157600080fd5b818601915086601f830112613e3557600080fd5b813581811115613e4457600080fd5b8760208260051b8501011115613e5957600080fd5b6020830194508093505050509250925092565b60008060408385031215613e7f57600080fd5b50508035926020909101359150565b6101008101613e9d828b6139ca565b60208201989098529515156040870152606086019490945260808501929092526001600160a01b031660a084015260c0830152151560e090910152919050565b6101008101613eec828b6139ca565b971515602082015295151560408701526060860194909452608085019290925260a084015260c083015260e090910152919050565b60008060408385031215613f3457600080fd5b82359150613f4460208401613a5c565b90509250929050565b600081518084526020808501945080840160005b83811015613f7d57815187529582019590820190600101613f61565b509495945050505050565b606081526000613f9b6060830186613f4d565b8281036020840152613fad8186613f4d565b90508281036040840152613fc18185613f4d565b9695505050505050565b8015158114613fd957600080fd5b50565b60008060408385031215613fef57600080fd5b82359150602083013561400181613fcb565b809150509250929050565b6000806040838503121561401f57600080fd5b61402883613a5c565b9150613f4460208401613a5c565b60006101a080838503121561404a57600080fd5b83601f84011261405957600080fd5b6040518181018181106001600160401b038211171561407a5761407a613aef565b60405290830190808583111561408f57600080fd5b845b838110156133d6576140a281613a5c565b825260209182019101614091565b600080600080600060a086880312156140c857600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60a0815260006140fe60a0830188613f4d565b6020838203818501528188518084528284019150828160051b850101838b0160005b8381101561414e57601f1987840301855261413c838351613988565b94860194925090850190600101614120565b50508681036040880152614162818b613f4d565b945050505050828103606084015261417a8186613f4d565b9050828103608084015261418e8185613f4d565b98975050505050505050565b602081526000610c006020830184613f4d565b600080600080608085870312156141c357600080fd5b8435935060208501356141d581613fcb565b93969395505050506040820135916060013590565b600181811c908216806141fe57607f821691505b60208210810361421e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526034908201527f50726f706f73616c206973207374696c6c20676f696e67206f6e206f72206e6f60408201527374206576656e207374617274656420647564652160601b606082015260800190565b60006020828403121561428a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60208082526026908201527f4f6e6c79206578656375746f72732063616e2063616c6c20746869732066756e6040820152656374696f6e2160d01b606082015260800190565b600081516142ff818560208601613964565b9290920192915050565b7f416464696e672061206e65772070726f706f73616c207479706520776974682081527503337b63637bbb4b733903830b930b6b2ba32b9399d160551b60208201526902632b733ba341037b3160b51b603682015260008551614373816040850160208a01613964565b808301905061017160f51b8060408301527f526571756972656420417070726f76616c2052617465206f6620000000000000604283015286516143bd81605c850160208b01613964565b605c9201918201527f526571756972656420546f6b656e20416d6f756e74206f662000000000000000605e82015284516143fe816077840160208901613964565b61418e61444d61444761441e60778587010161017160f51b815260020190565b7f5265717569726564205061727469636970616e7420416d6f756e74206f6620008152601f0190565b876142ed565b601760f91b815260010190565b634e487b7160e01b600052601160045260246000fd5b6000600182016144825761448261445a565b5060010190565b601f82111561317d57600081815260208120601f850160051c810160208610156144b05750805b601f850160051c820191505b818110156144cf578281556001016144bc565b505050505050565b81516001600160401b038111156144f0576144f0613aef565b614504816144fe84546141ea565b84614489565b602080601f83116001811461453957600084156145215750858301515b600019600386901b1c1916600185901b1785556144cf565b600085815260208120601f198616915b8281101561456857888601518255948401946001909101908401614549565b50858210156145865787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526033908201527f44414f20686173206e6f7420656e6f7567682062616c616e636520746f207370604082015272656e6421205361642c2069736e27742069743f60681b606082015260800190565b6b029b832b73234b7339037b3160a51b81526000825161461081600c850160208701613964565b6520636f696e7360d01b600c939091019283015250601201919050565b68029b832b73234b733960bd1b815260008351614651816009850160208801613964565b700103a37b5b2b73990333937b6903a34329607d1b600991840191820152835161468281601a840160208801613964565b711031b7b73a3930b1ba1030b2323932b9b99760711b601a9290910191820152602c01949350505050565b60208082526011908201527015dc9bdb99c81c1c9bdc1bdcd85b081251607a1b604082015260600190565b60208082526030908201527f5468652070726f706f73616c207374696c6c20676f696e67206f6e206f72206e60408201526f6f74206576656e20737461727465642160801b606082015260800190565b7f496e20537469636b2044414f20636f6e74726163742c207570646174696e672081527f4d696e696d756d2042616c616e636520546f2050726f706f736520746f20000060208201526000835161478681603e850160208801613964565b65010333937b6960d51b603e9184019182015283516147ac816044840160208801613964565b601760f91b60449290910191820152604501949350505050565b60208082526054908201527f546869732070726f706f73616c206469646e27742070617373206f72206e6f7460408201527f2066696e616c697a65642062726f2120436865636b20796f7572206d6f6e65746060820152736172792070726f706f73616c206e756d6265722160601b608082015260a00190565b60208082526029908201527f596f7520646f6e2774206861766520616e7920616c6c6f77616e63652c20736f60408201526872727920647564652160b81b606082015260800190565b80820180821115610c7257610c7261445a565b6000602082840312156148ae57600080fd5b8151610c0081613fcb565b7f496e20537469636b2044414f20636f6e74726163742c205570646174696e672081527f70726f706f73616c207479706520696e6465786573206f6620696e646578200060208201526000845161491781603f850160208901613964565b630103a37960e51b603f91840191820152845161493b816043840160208901613964565b65010333937b6960d51b604392909101918201528351614962816049840160208801613964565b601760f91b60499290910191820152604a0195945050505050565b7f496e20537469636b2044414f20636f6e74726163742c207570646174696e672081527f636f6e74726163742061646472657373206f6620696e646578200000000000006020820152600084516149db81603a850160208901613964565b630103a37960e51b603a9184019182015284516149ff81603e840160208901613964565b65010333937b6960d51b603e92909101918201528351614a26816044840160208801613964565b601760f91b6044929091019182015260450195945050505050565b600082614a5e57634e487b7160e01b600052601260045260246000fd5b500490565b7f5570646174696e672070726f706f73616c2074797065206e756d626572200000815260008651614a9b81601e850160208b01613964565b7f207769746820666f6c6c6f77696e6720706172616d65746572733a2000000000601e918401918201526902632b733ba34103a37960b51b603a8201528651614aeb816044840160208b01613964565b65010333937b6960d51b604492909101918201528551614b1281604a840160208a01613964565b61017160f51b604a92909101918201527f526571756972656420417070726f76616c205261746520746f20000000000000604c8201528451614b5b816066840160208901613964565b614b8a614b7c61444760668486010165010333937b6960d51b815260060190565b61017160f51b815260020190565b9998505050505050505050565b7f526571756972656420546f6b656e20416d6f756e7420746f2000000000000000815260008551614bcf816019850160208a01613964565b808301905065010333937b6960d51b8060198301528651614bf781601f850160208b01613964565b80830192505061017160f51b80601f8401527f5265717569726564205061727469636970616e7420416d6f756e7420746f200060218401528651614c42816040860160208b01613964565b6040930192830191909152845190614c61826046850160208901613964565b604692909101918201526048019695505050505050565b60008351614c8a818460208801613964565b835190830190614c9e818360208801613964565b01949350505050565b8082028115828204841417610c7257610c7261445a565b81810381811115610c7257610c7261445a565b600081614ce057614ce061445a565b50600019019056fea2646970667358221220ad0bef23bdfb1d5cd434a01ff8611b1657eed4241162fd909c0514fae5f248a064736f6c63430008130033";
        public StickDAODeploymentBase() : base(BYTECODE) { }
        public StickDAODeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address[13]", "_contracts", 1)]
        public virtual List<string> Contracts { get; set; }
    }

    public partial class DEBUG_setContractFunction : DEBUG_setContractFunctionBase { }

    [Function("DEBUG_setContract")]
    public class DEBUG_setContractFunctionBase : FunctionMessage
    {
        [Parameter("address", "_contractAddress", 1)]
        public virtual string ContractAddress { get; set; }
        [Parameter("uint256", "_index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class DEBUG_setContractsFunction : DEBUG_setContractsFunctionBase { }

    [Function("DEBUG_setContracts")]
    public class DEBUG_setContractsFunctionBase : FunctionMessage
    {
        [Parameter("address[13]", "_contracts", 1)]
        public virtual List<string> Contracts { get; set; }
    }

    public partial class AllowanceFunction : AllowanceFunctionBase { }

    [Function("allowance", "uint256")]
    public class AllowanceFunctionBase : FunctionMessage
    {
        [Parameter("address", "owner", 1)]
        public virtual string Owner { get; set; }
        [Parameter("address", "spender", 2)]
        public virtual string Spender { get; set; }
    }

    public partial class ApproveFunction : ApproveFunctionBase { }

    [Function("approve", "bool")]
    public class ApproveFunctionBase : FunctionMessage
    {
        [Parameter("address", "spender", 1)]
        public virtual string Spender { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class BalanceOfFunction : BalanceOfFunctionBase { }

    [Function("balanceOf", "uint256")]
    public class BalanceOfFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class ClaimCoinSpendingFunction : ClaimCoinSpendingFunctionBase { }

    [Function("claimCoinSpending")]
    public class ClaimCoinSpendingFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_spendingProposalNumber", 1)]
        public virtual BigInteger SpendingProposalNumber { get; set; }
        [Parameter("bytes32[]", "_merkleProof", 2)]
        public virtual List<byte[]> MerkleProof { get; set; }
    }

    public partial class ClaimTokenSpendingFunction : ClaimTokenSpendingFunctionBase { }

    [Function("claimTokenSpending")]
    public class ClaimTokenSpendingFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_spendingProposalNumber", 1)]
        public virtual BigInteger SpendingProposalNumber { get; set; }
        [Parameter("bytes32[]", "_merkleProof", 2)]
        public virtual List<byte[]> MerkleProof { get; set; }
    }

    public partial class ContractsFunction : ContractsFunctionBase { }

    [Function("contracts", "address")]
    public class ContractsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class DecimalsFunction : DecimalsFunctionBase { }

    [Function("decimals", "uint8")]
    public class DecimalsFunctionBase : FunctionMessage
    {

    }

    public partial class DecreaseAllowanceFunction : DecreaseAllowanceFunctionBase { }

    [Function("decreaseAllowance", "bool")]
    public class DecreaseAllowanceFunctionBase : FunctionMessage
    {
        [Parameter("address", "spender", 1)]
        public virtual string Spender { get; set; }
        [Parameter("uint256", "subtractedValue", 2)]
        public virtual BigInteger SubtractedValue { get; set; }
    }

    public partial class ExecuteContractAddressUpdateProposalFunction : ExecuteContractAddressUpdateProposalFunctionBase { }

    [Function("executeContractAddressUpdateProposal")]
    public class ExecuteContractAddressUpdateProposalFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
    }

    public partial class ExecuteFunctionsProposalTypesUpdateProposalFunction : ExecuteFunctionsProposalTypesUpdateProposalFunctionBase { }

    [Function("executeFunctionsProposalTypesUpdateProposal")]
    public class ExecuteFunctionsProposalTypesUpdateProposalFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
    }

    public partial class ExecuteMinBalanceToPropUpdateProposalFunction : ExecuteMinBalanceToPropUpdateProposalFunctionBase { }

    [Function("executeMinBalanceToPropUpdateProposal")]
    public class ExecuteMinBalanceToPropUpdateProposalFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
    }

    public partial class ExecuteNewProposalTypeProposalFunction : ExecuteNewProposalTypeProposalFunctionBase { }

    [Function("executeNewProposalTypeProposal")]
    public class ExecuteNewProposalTypeProposalFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
    }

    public partial class ExecuteProposalTypeUpdateProposalFunction : ExecuteProposalTypeUpdateProposalFunctionBase { }

    [Function("executeProposalTypeUpdateProposal")]
    public class ExecuteProposalTypeUpdateProposalFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
    }

    public partial class FinalizeSpendingProposalFunction : FinalizeSpendingProposalFunctionBase { }

    [Function("finalizeSpendingProposal")]
    public class FinalizeSpendingProposalFunctionBase : FunctionMessage
    {

    }

    public partial class FunctionsProposalTypesFunction : FunctionsProposalTypesFunctionBase { }

    [Function("functionsProposalTypes", "uint256")]
    public class FunctionsProposalTypesFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetContractCoinBalanceFunction : GetContractCoinBalanceFunctionBase { }

    [Function("getContractCoinBalance", "uint256")]
    public class GetContractCoinBalanceFunctionBase : FunctionMessage
    {

    }

    public partial class GetContractTokenBalanceFunction : GetContractTokenBalanceFunctionBase { }

    [Function("getContractTokenBalance", "uint256")]
    public class GetContractTokenBalanceFunctionBase : FunctionMessage
    {
        [Parameter("address", "_tokenContractAddress", 1)]
        public virtual string TokenContractAddress { get; set; }
    }

    public partial class GetMinBalanceToProposeFunction : GetMinBalanceToProposeFunctionBase { }

    [Function("getMinBalanceToPropose", "uint256")]
    public class GetMinBalanceToProposeFunctionBase : FunctionMessage
    {

    }

    public partial class IncreaseAllowanceFunction : IncreaseAllowanceFunctionBase { }

    [Function("increaseAllowance", "bool")]
    public class IncreaseAllowanceFunctionBase : FunctionMessage
    {
        [Parameter("address", "spender", 1)]
        public virtual string Spender { get; set; }
        [Parameter("uint256", "addedValue", 2)]
        public virtual BigInteger AddedValue { get; set; }
    }

    public partial class IsProposalPassedFunction : IsProposalPassedFunctionBase { }

    [Function("isProposalPassed", "bool")]
    public class IsProposalPassedFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
    }

    public partial class LordVoteFunction : LordVoteFunctionBase { }

    [Function("lordVote", "string")]
    public class LordVoteFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
        [Parameter("bool", "_isApproving", 2)]
        public virtual bool IsApproving { get; set; }
        [Parameter("uint256", "_lordID", 3)]
        public virtual BigInteger LordID { get; set; }
        [Parameter("uint256", "_lordTotalSupply", 4)]
        public virtual BigInteger LordTotalSupply { get; set; }
    }

    public partial class MinBalanceToProposeFunction : MinBalanceToProposeFunctionBase { }

    [Function("minBalanceToPropose", "uint256")]
    public class MinBalanceToProposeFunctionBase : FunctionMessage
    {

    }

    public partial class MintTokensFunction : MintTokensFunctionBase { }

    [Function("mintTokens")]
    public class MintTokensFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minter", 1)]
        public virtual string Minter { get; set; }
        [Parameter("uint256", "_amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class NameFunction : NameFunctionBase { }

    [Function("name", "string")]
    public class NameFunctionBase : FunctionMessage
    {

    }

    public partial class NewProposalFunction : NewProposalFunctionBase { }

    [Function("newProposal", "uint256")]
    public class NewProposalFunctionBase : FunctionMessage
    {
        [Parameter("string", "_description", 1)]
        public virtual string Description { get; set; }
        [Parameter("uint256", "_proposalType", 2)]
        public virtual BigInteger ProposalType { get; set; }
    }

    public partial class ProposalResultFunction : ProposalResultFunctionBase { }

    [Function("proposalResult", "uint256")]
    public class ProposalResultFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
    }

    public partial class ProposalTrackersFunction : ProposalTrackersFunctionBase { }

    [Function("proposalTrackers", typeof(ProposalTrackersOutputDTO))]
    public class ProposalTrackersFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class ProposalTypeUpdatesFunction : ProposalTypeUpdatesFunctionBase { }

    [Function("proposalTypeUpdates", typeof(ProposalTypeUpdatesOutputDTO))]
    public class ProposalTypeUpdatesFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class ProposalTypesFunction : ProposalTypesFunctionBase { }

    [Function("proposalTypes", typeof(ProposalTypesOutputDTO))]
    public class ProposalTypesFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class ProposalsFunction : ProposalsFunctionBase { }

    [Function("proposals", typeof(ProposalsOutputDTO))]
    public class ProposalsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class ProposeContractAddressUpdateFunction : ProposeContractAddressUpdateFunctionBase { }

    [Function("proposeContractAddressUpdate")]
    public class ProposeContractAddressUpdateFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_contractIndex", 1)]
        public virtual BigInteger ContractIndex { get; set; }
        [Parameter("address", "_newAddress", 2)]
        public virtual string NewAddress { get; set; }
    }

    public partial class ProposeFunctionsProposalTypesUpdateFunction : ProposeFunctionsProposalTypesUpdateFunctionBase { }

    [Function("proposeFunctionsProposalTypesUpdate")]
    public class ProposeFunctionsProposalTypesUpdateFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_functionIndex", 1)]
        public virtual BigInteger FunctionIndex { get; set; }
        [Parameter("uint256", "_newIndex", 2)]
        public virtual BigInteger NewIndex { get; set; }
    }

    public partial class ProposeMinBalanceToPropUpdateFunction : ProposeMinBalanceToPropUpdateFunctionBase { }

    [Function("proposeMinBalanceToPropUpdate")]
    public class ProposeMinBalanceToPropUpdateFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_newAmount", 1)]
        public virtual BigInteger NewAmount { get; set; }
    }

    public partial class ProposeNewCoinSpendingFunction : ProposeNewCoinSpendingFunctionBase { }

    [Function("proposeNewCoinSpending")]
    public class ProposeNewCoinSpendingFunctionBase : FunctionMessage
    {
        [Parameter("bytes32[]", "_merkleRoots", 1)]
        public virtual List<byte[]> MerkleRoots { get; set; }
        [Parameter("uint256[]", "_allowances", 2)]
        public virtual List<BigInteger> Allowances { get; set; }
        [Parameter("uint256", "_totalSpending", 3)]
        public virtual BigInteger TotalSpending { get; set; }
    }

    public partial class ProposeNewProposalTypeFunction : ProposeNewProposalTypeFunctionBase { }

    [Function("proposeNewProposalType")]
    public class ProposeNewProposalTypeFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_length", 1)]
        public virtual BigInteger Length { get; set; }
        [Parameter("uint256", "_requiredApprovalRate", 2)]
        public virtual BigInteger RequiredApprovalRate { get; set; }
        [Parameter("uint256", "_requiredTokenAmount", 3)]
        public virtual BigInteger RequiredTokenAmount { get; set; }
        [Parameter("uint256", "_requiredParticipantAmount", 4)]
        public virtual BigInteger RequiredParticipantAmount { get; set; }
    }

    public partial class ProposeNewTokenSpendingFunction : ProposeNewTokenSpendingFunctionBase { }

    [Function("proposeNewTokenSpending")]
    public class ProposeNewTokenSpendingFunctionBase : FunctionMessage
    {
        [Parameter("address", "_tokenContractAddress", 1)]
        public virtual string TokenContractAddress { get; set; }
        [Parameter("bytes32[]", "_merkleRoots", 2)]
        public virtual List<byte[]> MerkleRoots { get; set; }
        [Parameter("uint256[]", "_allowances", 3)]
        public virtual List<BigInteger> Allowances { get; set; }
        [Parameter("uint256", "_totalSpending", 4)]
        public virtual BigInteger TotalSpending { get; set; }
    }

    public partial class ProposeProposalTypeUpdateFunction : ProposeProposalTypeUpdateFunctionBase { }

    [Function("proposeProposalTypeUpdate")]
    public class ProposeProposalTypeUpdateFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalTypeNumber", 1)]
        public virtual BigInteger ProposalTypeNumber { get; set; }
        [Parameter("uint256", "_newLength", 2)]
        public virtual BigInteger NewLength { get; set; }
        [Parameter("uint256", "_newRequiredApprovalRate", 3)]
        public virtual BigInteger NewRequiredApprovalRate { get; set; }
        [Parameter("uint256", "_newRequiredTokenAmount", 4)]
        public virtual BigInteger NewRequiredTokenAmount { get; set; }
        [Parameter("uint256", "_newRequiredParticipantAmount", 5)]
        public virtual BigInteger NewRequiredParticipantAmount { get; set; }
    }

    public partial class ReturnAllowancesFunction : ReturnAllowancesFunctionBase { }

    [Function("returnAllowances", "uint256[]")]
    public class ReturnAllowancesFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_spendingProposalNumber", 1)]
        public virtual BigInteger SpendingProposalNumber { get; set; }
    }

    public partial class ReturnMerkleRootsFunction : ReturnMerkleRootsFunctionBase { }

    [Function("returnMerkleRoots", "bytes32[]")]
    public class ReturnMerkleRootsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_spendingProposalNumber", 1)]
        public virtual BigInteger SpendingProposalNumber { get; set; }
    }

    public partial class SpendingProposalsFunction : SpendingProposalsFunctionBase { }

    [Function("spendingProposals", typeof(SpendingProposalsOutputDTO))]
    public class SpendingProposalsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class SymbolFunction : SymbolFunctionBase { }

    [Function("symbol", "string")]
    public class SymbolFunctionBase : FunctionMessage
    {

    }

    public partial class TotalSupplyFunction : TotalSupplyFunctionBase { }

    [Function("totalSupply", "uint256")]
    public class TotalSupplyFunctionBase : FunctionMessage
    {

    }

    public partial class TransferFunction : TransferFunctionBase { }

    [Function("transfer", "bool")]
    public class TransferFunctionBase : FunctionMessage
    {
        [Parameter("address", "to", 1)]
        public virtual string To { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class TransferFromFunction : TransferFromFunctionBase { }

    [Function("transferFrom", "bool")]
    public class TransferFromFunctionBase : FunctionMessage
    {
        [Parameter("address", "from", 1)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 2)]
        public virtual string To { get; set; }
        [Parameter("uint256", "amount", 3)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class ViewLastProposalsBasicsFunction : ViewLastProposalsBasicsFunctionBase { }

    [Function("viewLastProposalsBasics", typeof(ViewLastProposalsBasicsOutputDTO))]
    public class ViewLastProposalsBasicsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalAmount", 1)]
        public virtual BigInteger ProposalAmount { get; set; }
    }

    public partial class ViewLastProposalsNumbersFunction : ViewLastProposalsNumbersFunctionBase { }

    [Function("viewLastProposalsNumbers", typeof(ViewLastProposalsNumbersOutputDTO))]
    public class ViewLastProposalsNumbersFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalAmount", 1)]
        public virtual BigInteger ProposalAmount { get; set; }
    }

    public partial class VoteFunction : VoteFunctionBase { }

    [Function("vote")]
    public class VoteFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_proposalID", 1)]
        public virtual BigInteger ProposalID { get; set; }
        [Parameter("bool", "_isApproving", 2)]
        public virtual bool IsApproving { get; set; }
    }

    public partial class ApprovalEventDTO : ApprovalEventDTOBase { }

    [Event("Approval")]
    public class ApprovalEventDTOBase : IEventDTO
    {
        [Parameter("address", "owner", 1, true )]
        public virtual string Owner { get; set; }
        [Parameter("address", "spender", 2, true )]
        public virtual string Spender { get; set; }
        [Parameter("uint256", "value", 3, false )]
        public virtual BigInteger Value { get; set; }
    }

    public partial class TransferEventDTO : TransferEventDTOBase { }

    [Event("Transfer")]
    public class TransferEventDTOBase : IEventDTO
    {
        [Parameter("address", "from", 1, true )]
        public virtual string From { get; set; }
        [Parameter("address", "to", 2, true )]
        public virtual string To { get; set; }
        [Parameter("uint256", "value", 3, false )]
        public virtual BigInteger Value { get; set; }
    }





    public partial class AllowanceOutputDTO : AllowanceOutputDTOBase { }

    [FunctionOutput]
    public class AllowanceOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }



    public partial class BalanceOfOutputDTO : BalanceOfOutputDTOBase { }

    [FunctionOutput]
    public class BalanceOfOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }





    public partial class ContractsOutputDTO : ContractsOutputDTOBase { }

    [FunctionOutput]
    public class ContractsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class DecimalsOutputDTO : DecimalsOutputDTOBase { }

    [FunctionOutput]
    public class DecimalsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }















    public partial class FunctionsProposalTypesOutputDTO : FunctionsProposalTypesOutputDTOBase { }

    [FunctionOutput]
    public class FunctionsProposalTypesOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetContractCoinBalanceOutputDTO : GetContractCoinBalanceOutputDTOBase { }

    [FunctionOutput]
    public class GetContractCoinBalanceOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetContractTokenBalanceOutputDTO : GetContractTokenBalanceOutputDTOBase { }

    [FunctionOutput]
    public class GetContractTokenBalanceOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetMinBalanceToProposeOutputDTO : GetMinBalanceToProposeOutputDTOBase { }

    [FunctionOutput]
    public class GetMinBalanceToProposeOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }







    public partial class MinBalanceToProposeOutputDTO : MinBalanceToProposeOutputDTOBase { }

    [FunctionOutput]
    public class MinBalanceToProposeOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }



    public partial class NameOutputDTO : NameOutputDTOBase { }

    [FunctionOutput]
    public class NameOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("string", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }





    public partial class ProposalTrackersOutputDTO : ProposalTrackersOutputDTOBase { }

    [FunctionOutput]
    public class ProposalTrackersOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "status", 1)]
        public virtual byte Status { get; set; }
        [Parameter("uint256", "updateCode", 2)]
        public virtual BigInteger UpdateCode { get; set; }
        [Parameter("bool", "isExecuted", 3)]
        public virtual bool IsExecuted { get; set; }
        [Parameter("uint256", "index", 4)]
        public virtual BigInteger Index { get; set; }
        [Parameter("uint256", "newUint", 5)]
        public virtual BigInteger NewUint { get; set; }
        [Parameter("address", "newAddress", 6)]
        public virtual string NewAddress { get; set; }
        [Parameter("bytes32", "newBytes32", 7)]
        public virtual byte[] NewBytes32 { get; set; }
        [Parameter("bool", "newBool", 8)]
        public virtual bool NewBool { get; set; }
    }

    public partial class ProposalTypeUpdatesOutputDTO : ProposalTypeUpdatesOutputDTOBase { }

    [FunctionOutput]
    public class ProposalTypeUpdatesOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "status", 1)]
        public virtual byte Status { get; set; }
        [Parameter("bool", "isExecuted", 2)]
        public virtual bool IsExecuted { get; set; }
        [Parameter("bool", "isNewType", 3)]
        public virtual bool IsNewType { get; set; }
        [Parameter("uint256", "proposalTypeNumber", 4)]
        public virtual BigInteger ProposalTypeNumber { get; set; }
        [Parameter("uint256", "newLength", 5)]
        public virtual BigInteger NewLength { get; set; }
        [Parameter("uint256", "newRequiredApprovalRate", 6)]
        public virtual BigInteger NewRequiredApprovalRate { get; set; }
        [Parameter("uint256", "newRequiredTokenAmount", 7)]
        public virtual BigInteger NewRequiredTokenAmount { get; set; }
        [Parameter("uint256", "newRequiredParticipantAmount", 8)]
        public virtual BigInteger NewRequiredParticipantAmount { get; set; }
    }

    public partial class ProposalTypesOutputDTO : ProposalTypesOutputDTOBase { }

    [FunctionOutput]
    public class ProposalTypesOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "length", 1)]
        public virtual BigInteger Length { get; set; }
        [Parameter("uint256", "requiredApprovalRate", 2)]
        public virtual BigInteger RequiredApprovalRate { get; set; }
        [Parameter("uint256", "requiredTokenAmount", 3)]
        public virtual BigInteger RequiredTokenAmount { get; set; }
        [Parameter("uint256", "requiredParticipantAmount", 4)]
        public virtual BigInteger RequiredParticipantAmount { get; set; }
    }

    public partial class ProposalsOutputDTO : ProposalsOutputDTOBase { }

    [FunctionOutput]
    public class ProposalsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "id", 1)]
        public virtual BigInteger Id { get; set; }
        [Parameter("string", "description", 2)]
        public virtual string Description { get; set; }
        [Parameter("uint256", "startTime", 3)]
        public virtual BigInteger StartTime { get; set; }
        [Parameter("uint256", "proposalType", 4)]
        public virtual BigInteger ProposalType { get; set; }
        [Parameter("uint8", "status", 5)]
        public virtual byte Status { get; set; }
        [Parameter("uint256", "participants", 6)]
        public virtual BigInteger Participants { get; set; }
        [Parameter("uint256", "totalVotes", 7)]
        public virtual BigInteger TotalVotes { get; set; }
        [Parameter("uint256", "yayCount", 8)]
        public virtual BigInteger YayCount { get; set; }
        [Parameter("uint256", "nayCount", 9)]
        public virtual BigInteger NayCount { get; set; }
    }















    public partial class ReturnAllowancesOutputDTO : ReturnAllowancesOutputDTOBase { }

    [FunctionOutput]
    public class ReturnAllowancesOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256[]", "", 1)]
        public virtual List<BigInteger> ReturnValue1 { get; set; }
    }

    public partial class ReturnMerkleRootsOutputDTO : ReturnMerkleRootsOutputDTOBase { }

    [FunctionOutput]
    public class ReturnMerkleRootsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32[]", "", 1)]
        public virtual List<byte[]> ReturnValue1 { get; set; }
    }

    public partial class SpendingProposalsOutputDTO : SpendingProposalsOutputDTOBase { }

    [FunctionOutput]
    public class SpendingProposalsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "status", 1)]
        public virtual byte Status { get; set; }
        [Parameter("uint256", "proposalID", 2)]
        public virtual BigInteger ProposalID { get; set; }
        [Parameter("uint256", "amount", 3)]
        public virtual BigInteger Amount { get; set; }
        [Parameter("address", "tokenAddress", 4)]
        public virtual string TokenAddress { get; set; }
        [Parameter("uint256", "totalClaimedAmount", 5)]
        public virtual BigInteger TotalClaimedAmount { get; set; }
    }

    public partial class SymbolOutputDTO : SymbolOutputDTOBase { }

    [FunctionOutput]
    public class SymbolOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("string", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class TotalSupplyOutputDTO : TotalSupplyOutputDTOBase { }

    [FunctionOutput]
    public class TotalSupplyOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }





    public partial class ViewLastProposalsBasicsOutputDTO : ViewLastProposalsBasicsOutputDTOBase { }

    [FunctionOutput]
    public class ViewLastProposalsBasicsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256[]", "", 1)]
        public virtual List<BigInteger> ReturnValue1 { get; set; }
        [Parameter("string[]", "", 2)]
        public virtual List<string> ReturnValue2 { get; set; }
        [Parameter("uint256[]", "", 3)]
        public virtual List<BigInteger> ReturnValue3 { get; set; }
        [Parameter("uint256[]", "", 4)]
        public virtual List<BigInteger> ReturnValue4 { get; set; }
        [Parameter("uint256[]", "", 5)]
        public virtual List<BigInteger> ReturnValue5 { get; set; }
    }

    public partial class ViewLastProposalsNumbersOutputDTO : ViewLastProposalsNumbersOutputDTOBase { }

    [FunctionOutput]
    public class ViewLastProposalsNumbersOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256[]", "", 1)]
        public virtual List<BigInteger> ReturnValue1 { get; set; }
        [Parameter("uint256[]", "", 2)]
        public virtual List<BigInteger> ReturnValue2 { get; set; }
        [Parameter("uint256[]", "", 3)]
        public virtual List<BigInteger> ReturnValue3 { get; set; }
    }


}
